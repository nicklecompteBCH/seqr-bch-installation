from django.core.management.base import BaseCommand
import json

from django.test import Client
from django.contrib.auth.models import User
from django.urls import reverse


class Command(BaseCommand):

    def add_arguments(self, parser):
        parser.add_argument('project_id')
        parser.add_argument('family_id', nargs='*')

    def handle(self, *args, **options):
        user = User.objects.filter(is_superuser=True)[0]
        assert user.is_authenticated()

        c = Client()
        c.force_login(user)
        project_id = options.get('project_id')

        for family_id in options.get('family_id'):
            print('Searching for family {}'.format(family_id))
            search_query = {
                'return_type': 'csv',
                'project_id': project_id,
                'family_id': family_id,
                'search_mode': 'all_variants',
                'variant_filter': json.dumps({
                     "genes_raw": "ENSG00000011198\nENSG00000122971\nENSG00000072778\nENSG00000143632\nENSG00000006530\nENSG00000162688\nENSG00000188157\nENSG00000101901\nENSG00000172339\nENSG00000119523\nENSG00000171714\nENSG00000196296\nENSG00000162885\nENSG00000174684\nENSG00000151929\nENSG00000136717\nENSG00000107815\nENSG00000092529\nENSG00000182533\nENSG00000162004\nENSG00000165410\nENSG00000070748\nENSG00000100288\nENSG00000138435\nENSG00000170175\nENSG00000135902\nENSG00000108556\nENSG00000196811\nENSG00000188037\nENSG00000169714\nENSG00000018236\nENSG00000111799\nENSG00000142156\nENSG00000142173\nENSG00000163359\nENSG00000206561\nENSG00000014919\nENSG00000157184\nENSG00000109846\nENSG00000173402\nENSG00000175084\nENSG00000198947\nENSG00000105993\nENSG00000079805\nENSG00000175920\nENSG00000175283\nENSG00000172269\nENSG00000000419\nENSG00000136908\nENSG00000179085\nENSG00000135636\nENSG00000102119\nENSG00000108515\nENSG00000140374\nENSG00000105379\nENSG00000171503\nENSG00000189057\nENSG00000022267\nENSG00000106080\nENSG00000181027\nENSG00000106692\nENSG00000128591\nENSG00000171298\nENSG00000114480\nENSG00000198380\nENSG00000173540\nENSG00000159921\nENSG00000163754\nENSG00000104812\nENSG00000152795\nENSG00000136003\nENSG00000132740\nENSG00000214960\nENSG00000135424\nENSG00000234438\nENSG00000123700\nENSG00000157119\nENSG00000239474\nENSG00000198642\nENSG00000196569\nENSG00000172037\nENSG00000005893\nENSG00000133424\nENSG00000122367\nENSG00000134333\nENSG00000072163\nENSG00000160789\nENSG00000134324\nENSG00000134569\nENSG00000015479\nENSG00000145794\nENSG00000138379\nENSG00000171100\nENSG00000163719\nENSG00000138823\nENSG00000030304\nENSG00000134571\nENSG00000111046\nENSG00000105357\nENSG00000125414\nENSG00000109063\nENSG00000092054\nENSG00000120729\nENSG00000183091\nENSG00000198836\nENSG00000182500\nENSG00000100836\nENSG00000152556\nENSG00000164708\nENSG00000102144\nENSG00000079739\nENSG00000067177\nENSG00000178209\nENSG00000177666\nENSG00000140521\nENSG00000256525\nENSG00000085998\nENSG00000144647\nENSG00000185900\nENSG00000130714\nENSG00000009830\nENSG00000138078\nENSG00000106617\nENSG00000165996\nENSG00000177469\nENSG00000068976\nENSG00000165917\nENSG00000048392\nENSG00000196218\nENSG00000007314\nENSG00000162430\nENSG00000108823\nENSG00000163069\nENSG00000170624\nENSG00000102683\nENSG00000120725\nENSG00000197375\nENSG00000178537\nENSG00000151729\nENSG00000101276\nENSG00000101596\nENSG00000185482\nENSG00000167323\nENSG00000109689\nENSG00000136143\nENSG00000131018\nENSG00000054654\nENSG00000120948\nENSG00000102125\nENSG00000173991\nENSG00000116001\nENSG00000166548\nENSG00000170876\nENSG00000118600\nENSG00000130598\nENSG00000105048\nENSG00000130595\nENSG00000064419\nENSG00000143337\nENSG00000198467\nENSG00000143549\nENSG00000168538\nENSG00000119401\nENSG00000155657\nENSG00000130985\nENSG00000124164\nENSG00000165280\nENSG00000160131\nENSG00000139131",
                }),
                'quality_filter': json.dumps({"min_gq": 0, "min_ab": 0}),
            }

            url = '{}?{}'.format(
                reverse('mendelian_variant_search_api'),
                '&'.join(['{}={}'.format(k, v) for k, v in list(search_query.items())])
            )
            response = c.get(url)
            filename = "results_{}.csv".format(family_id)
            with open(filename, 'w') as f:
                f.write(response.content)
            print('Wrote results to {}'.format(filename))